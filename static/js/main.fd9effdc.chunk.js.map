{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","isReversed","sortAlpabet","setState","sortLength","sortReverse","resetState","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsDE,IAAME,EAAb,4MACEC,MAAc,CACZC,SAAU,EACVC,YAAY,GAHhB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CAAEH,SAAU,KAP9B,EAUEI,WAAa,WACX,EAAKD,SAAS,CAAEH,SAAU,KAX9B,EAcEK,YAAc,WACZ,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CAAEE,YAAaF,EAAME,gBAfjD,EAkBEK,WAAa,WACX,EAAKH,SAAS,CAAEH,SAAU,EAAGC,YAAY,KAnB7C,4CAsBE,WACE,MAAiCM,KAAKR,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACZO,EAlEV,SACEA,EADF,GAGG,IADCR,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAuBzB,OArBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,KAAM,EACJ,OAAOW,EAAME,cAAcD,GAE7B,KAAM,EACJ,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITb,GACFQ,EAAaM,UAKfC,QAAQC,IAAIjB,EAAUC,GAEfQ,EAsCSS,CAAkBrB,EAAiB,CAAEG,WAAUC,eAE7D,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASd,KAAKL,YACdiB,UAAWG,IACT,SACA,UACA,CAAE,WAAyB,IAAbtB,IANlB,iCAYA,wBACEoB,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,WAAyB,IAAbtB,IAEhBqB,QAASd,KAAKH,WAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWG,IACT,SACA,aACA,CAAE,YAA2B,IAAfrB,IAEhBoB,QAASd,KAAKF,YAPhB,sBAYEL,GAAYC,IACZ,wBACEmB,KAAK,SACLD,UAAWG,IACT,SACA,YACA,YAEFD,QAASd,KAAKD,WAPhB,sBAcJ,6BACE,6BACGE,EAAMe,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAP,oBAlFxD,GAAyBC,IAAMC,WCrE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fd9effdc.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case (1):\n        return good1.localeCompare(good2);\n\n      case (2):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\ntype State = {\n  sortType:SortType;\n  isReversed:boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state:State = {\n    sortType: 0,\n    isReversed: false,\n  };\n\n  sortAlpabet = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  sortReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  resetState = () => {\n    this.setState({ sortType: 0, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortAlpabet}\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== 1 },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== 2 },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.sortReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                'is-danger',\n                'is-light',\n              )}\n              onClick={this.resetState}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (<li data-cy=\"Good\" key={null}>{good}</li>))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}